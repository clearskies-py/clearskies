{
  "components": {
    "schemas": {
      "status": {
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "user": {
        "properties": {
          "age": {
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "title": "Auto generated by clearskies",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/statuses/": {
      "get": {
        "parameters": [
          {
            "description": "Search by name (via exact match)",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The index of the record to start listing results at (0-indexed)",
            "in": "query",
            "name": "start",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of records to return",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Column to sort by",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "enum": [
                "name",
                null
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Direction to sort",
            "in": "query",
            "name": "direction",
            "required": false,
            "schema": {
              "enum": [
                "asc",
                "desc",
                null
              ],
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/status",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "error": {
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {
                        "limit": {
                          "example": 100,
                          "format": "int32",
                          "type": "integer"
                        },
                        "numberResults": {
                          "example": 10,
                          "format": "int32",
                          "type": "integer"
                        },
                        "start": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The matching statuses"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {},
                      "type": "object"
                    },
                    "error": {
                      "example": "User readable error message",
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {
                        "limit": {
                          "example": 100,
                          "format": "int32",
                          "type": "integer"
                        },
                        "numberResults": {
                          "example": 10,
                          "format": "int32",
                          "type": "integer"
                        },
                        "start": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Invalid Call"
          }
        },
        "summary": "Fetch the list of current statuses"
      }
    },
    "/statuses/{id}": {
      "get": {
        "parameters": [
          {
            "description": "The id of the record to fetch",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/status",
                      "type": "object"
                    },
                    "error": {
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {},
                      "type": "object"
                    },
                    "status": {
                      "example": "success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The matching status"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {},
                      "type": "object"
                    },
                    "error": {
                      "example": "User readable error message",
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {
                        "limit": {
                          "example": 100,
                          "format": "int32",
                          "type": "integer"
                        },
                        "numberResults": {
                          "example": 10,
                          "format": "int32",
                          "type": "integer"
                        },
                        "start": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Fetch the details of the status with an id of {id}"
      }
    },
    "/users/": {
      "get": {
        "parameters": [
          {
            "description": "Search by name (via exact match)",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The index of the record to start listing results at (0-indexed)",
            "in": "query",
            "name": "start",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The number of records to return",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Column to sort by",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "enum": [
                "name",
                "age",
                null
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Direction to sort",
            "in": "query",
            "name": "direction",
            "required": false,
            "schema": {
              "enum": [
                "asc",
                "desc",
                null
              ],
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/user",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "error": {
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {
                        "limit": {
                          "example": 100,
                          "format": "int32",
                          "type": "integer"
                        },
                        "numberResults": {
                          "example": 10,
                          "format": "int32",
                          "type": "integer"
                        },
                        "start": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The matching users"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {},
                      "type": "object"
                    },
                    "error": {
                      "example": "User readable error message",
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {
                        "limit": {
                          "example": 100,
                          "format": "int32",
                          "type": "integer"
                        },
                        "numberResults": {
                          "example": 10,
                          "format": "int32",
                          "type": "integer"
                        },
                        "start": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Invalid Call"
          }
        },
        "summary": "Fetch the list of current users"
      },
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "age": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Create a new user",
          "required": 0
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {},
                      "type": "object"
                    },
                    "error": {
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {
                        "[COLUMN_NAME]": {
                          "example": "User friendly error message",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {
                        "limit": {
                          "example": 100,
                          "format": "int32",
                          "type": "integer"
                        },
                        "numberResults": {
                          "example": 10,
                          "format": "int32",
                          "type": "integer"
                        },
                        "start": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "inputErrors",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Invalid client-side input"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {},
                      "type": "object"
                    },
                    "error": {
                      "example": "User readable error message",
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {
                        "limit": {
                          "example": 100,
                          "format": "int32",
                          "type": "integer"
                        },
                        "numberResults": {
                          "example": 10,
                          "format": "int32",
                          "type": "integer"
                        },
                        "start": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Create a new user"
      }
    },
    "/users/search": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "limit": {
                    "example": 100,
                    "format": "int32",
                    "type": "integer"
                  },
                  "sort": {
                    "items": {
                      "properties": {
                        "column": {
                          "enum": [
                            "name",
                            "age",
                            null
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "direction": {
                          "enum": [
                            "asc",
                            "desc",
                            null
                          ],
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "start": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "where": {
                    "items": {
                      "properties": {
                        "column": {
                          "enum": [
                            "name",
                            null
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "operator": {
                          "enum": [
                            "<=>",
                            "!=",
                            "<=",
                            ">=",
                            ">",
                            "<",
                            "=",
                            "in",
                            "is not null",
                            "is null",
                            "is not",
                            "is",
                            "like",
                            null
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "value": {
                          "example": "Jane",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Advanced options for searching users",
          "required": 0
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/user",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "error": {
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {
                        "limit": {
                          "example": 100,
                          "format": "int32",
                          "type": "integer"
                        },
                        "numberResults": {
                          "example": 10,
                          "format": "int32",
                          "type": "integer"
                        },
                        "start": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The matching users"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {},
                      "type": "object"
                    },
                    "error": {
                      "example": "User readable error message",
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {
                        "limit": {
                          "example": 100,
                          "format": "int32",
                          "type": "integer"
                        },
                        "numberResults": {
                          "example": 10,
                          "format": "int32",
                          "type": "integer"
                        },
                        "start": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Invalid Call"
          }
        },
        "summary": "Advanced options for searching users"
      }
    },
    "/users/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The id of the record to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {},
                      "type": "object"
                    },
                    "error": {
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {},
                      "type": "object"
                    },
                    "status": {
                      "example": "success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The user was deleted"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {},
                      "type": "object"
                    },
                    "error": {
                      "example": "User readable error message",
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {
                        "limit": {
                          "example": 100,
                          "format": "int32",
                          "type": "integer"
                        },
                        "numberResults": {
                          "example": 10,
                          "format": "int32",
                          "type": "integer"
                        },
                        "start": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Delete the user with an id of {id}"
      },
      "get": {
        "parameters": [
          {
            "description": "The id of the record to fetch",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user",
                      "type": "object"
                    },
                    "error": {
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {},
                      "type": "object"
                    },
                    "status": {
                      "example": "success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The matching user"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {},
                      "type": "object"
                    },
                    "error": {
                      "example": "User readable error message",
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {
                        "limit": {
                          "example": 100,
                          "format": "int32",
                          "type": "integer"
                        },
                        "numberResults": {
                          "example": 10,
                          "format": "int32",
                          "type": "integer"
                        },
                        "start": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Fetch the details of the user with an id of {id}"
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the record to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "age": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Update the user with an id of {id}",
          "required": 0
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {},
                      "type": "object"
                    },
                    "error": {
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {
                        "[COLUMN_NAME]": {
                          "example": "User friendly error message",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {
                        "limit": {
                          "example": 100,
                          "format": "int32",
                          "type": "integer"
                        },
                        "numberResults": {
                          "example": 10,
                          "format": "int32",
                          "type": "integer"
                        },
                        "start": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "inputErrors",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Invalid client-side input"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {},
                      "type": "object"
                    },
                    "error": {
                      "example": "User readable error message",
                      "type": "string"
                    },
                    "inputErrors": {
                      "properties": {},
                      "type": "object"
                    },
                    "pagination": {
                      "properties": {
                        "limit": {
                          "example": 100,
                          "format": "int32",
                          "type": "integer"
                        },
                        "numberResults": {
                          "example": 10,
                          "format": "int32",
                          "type": "integer"
                        },
                        "start": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Update the user with an id of {id}"
      }
    }
  },
  "servers": [
    {
      "description": "Production",
      "url": "https://production.example.com/v1"
    }
  ]
}
